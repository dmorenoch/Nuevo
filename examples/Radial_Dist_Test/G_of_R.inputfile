# Brownian simulation of a boomerang colloidal suspension.
# Note, here we use a pycuda implementation to compute
# the matrix vector product Mf, it is necessary to have
# GPU compatible with CUDA to use this input file.
#
# Length, time and mass are given in units of microns, seconds and miligrams.

# Select scheme to integrate Brownian equations
scheme                                   stochastic_adams_bashforth_rollers

# Select implementation to compute M and M*f
# We recommend to use the C++ implementation which is faster,
# see documentation
mobility_blobs_implementation            numba
mobility_vector_prod_implementation      pycuda

# Select implementation to compute the blobs-blob interactions
blob_blob_force_implementation           numba

# Set time step, number of steps and save frequency
dt                                       1.0 #0.25
n_steps                                  42580
n_save                                   5
initial_step			         0
# where tu is (6*pi*eta*a^2*deb)/(U_0)
# current U_0 is 0.5*mg
# this is typicall the smallest timescale, however if the particles become exceedingly small then 
# td = (3*pi*eta*a^3)/(kT) may be smaller
# n_save is n_steps/66
# The rule for computing n_steps is the total time t=15*(a/v) and n_steps = t/dt, where
# v is given by (m*g*cos(theta))/(6*pi*eta*a).  This is the translational componenet of the 
# gravitational potential. However, if the angle is zero, in order to avoid dividing by zero
# you need to consider the vertical component instead. 


# Solver params
solver_tolerance                         1.0e-12
seed 					 1

# Set fluid viscosity (eta), gravity*blob_mass (g) and blob radius
eta                                      1.0e-3
g                                        0.009
tilt_angle				 0.0
blob_radius                              2.1


domain                                   in_plane

# Stochastic parameters
kT                                       0.0041419464

# RFD parameters
rf_delta                                 1.0e-4

# Periodic dimensions
periodic_length                          402.75 161.25 0

# Set interaction with the wall
# eps = 0.5*mg
repulsion_strength_wall                  0.016
debye_length_wall	   		 0.21

# Define implementation to compute the blobs-blob force and pass its arguments
repulsion_strength	   		 0.016
debye_length	   			 0.21

# Set output name
output_name                              ./run
save_clones				                       one_file

structure	../../Structures/blob.vertex	./G_of_R.clones

